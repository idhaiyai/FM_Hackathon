{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\scb-bank-policy\\\\src\\\\components\\\\RoleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { sortData } from '../utils/sort'; // Import your sorting function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleTable = () => {\n  _s();\n  const initialRoles = [{\n    name: 'Admin',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'User',\n    description: 'Limited access to resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Creator',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Approver',\n    description: 'Limited access to resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Creator and Approver',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }\n  // Add more roles as needed\n  ];\n  const [roles, setRoles] = useState(initialRoles);\n  const [sortedRoles, setSortedRoles] = useState([]);\n  const [sortBy, setSortBy] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  // Function to handle sorting\n  const handleSort = field => {\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortBy(field);\n    setSortDirection(direction);\n    setSortedRoles(sortData(roles, field, direction));\n  };\n\n  // Function to delete a role\n  const handleDelete = index => {\n    // Create a new array of roles excluding the role at the specified index\n    const updatedRoles = [...roles];\n    updatedRoles.splice(index, 1); // Remove the role at index\n    setRoles(updatedRoles); // Update the roles state\n    setSortedRoles(sortData(updatedRoles, sortBy, sortDirection)); // Update sorted roles if necessary\n  };\n\n  // Determine which array to display (sorted or original)\n  const rolesToDisplay = sortedRoles.length > 0 ? sortedRoles : roles;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Role Management Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            children: \"Role Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('description'),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('createdBy'),\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rolesToDisplay.map((role, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: role.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role.createdBy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: role.actions.map((action, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                if (action === 'Delete') {\n                  handleDelete(index); // Call delete function on click\n                } else {\n                  // Implement other actions as needed\n                }\n              },\n              children: action\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleTable, \"EojnPD/kj8za8axUkfLmfpg1N94=\");\n_c = RoleTable;\nexport default RoleTable;\nvar _c;\n$RefreshReg$(_c, \"RoleTable\");","map":{"version":3,"names":["React","useState","sortData","jsxDEV","_jsxDEV","RoleTable","_s","initialRoles","name","description","createdBy","actions","roles","setRoles","sortedRoles","setSortedRoles","sortBy","setSortBy","sortDirection","setSortDirection","handleSort","field","direction","handleDelete","index","updatedRoles","splice","rolesToDisplay","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","role","action","idx","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/scb-bank-policy/src/components/RoleTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sortData } from '../utils/sort'; // Import your sorting function\r\n\r\nconst RoleTable = () => {\r\n  const initialRoles = [\r\n    { name: 'Admin', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'User', description: 'Limited access to resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Creator', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Approver', description: 'Limited access to resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Creator and Approver', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    // Add more roles as needed\r\n  ];\r\n\r\n  const [roles, setRoles] = useState(initialRoles);\r\n  const [sortedRoles, setSortedRoles] = useState([]);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (field) => {\r\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(field);\r\n    setSortDirection(direction);\r\n    setSortedRoles(sortData(roles, field, direction));\r\n  };\r\n\r\n  // Function to delete a role\r\n  const handleDelete = (index) => {\r\n    // Create a new array of roles excluding the role at the specified index\r\n    const updatedRoles = [...roles];\r\n    updatedRoles.splice(index, 1); // Remove the role at index\r\n    setRoles(updatedRoles); // Update the roles state\r\n    setSortedRoles(sortData(updatedRoles, sortBy, sortDirection)); // Update sorted roles if necessary\r\n  };\r\n\r\n  // Determine which array to display (sorted or original)\r\n  const rolesToDisplay = sortedRoles.length > 0 ? sortedRoles : roles;\r\n\r\n  return (\r\n    <div className=\"policy-table\">\r\n      <h2>Role Management Overview</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('name')}>Role Name</th>\r\n            <th onClick={() => handleSort('description')}>Description</th>\r\n            <th onClick={() => handleSort('createdBy')}>Created By</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rolesToDisplay.map((role, index) => (\r\n            <tr key={index}>\r\n              <td>{role.name}</td>\r\n              <td>{role.description}</td>\r\n              <td>{role.createdBy}</td>\r\n              <td>\r\n                {role.actions.map((action, idx) => (\r\n                  <button key={idx} onClick={() => {\r\n                    if (action === 'Delete') {\r\n                      handleDelete(index); // Call delete function on click\r\n                    } else {\r\n                      // Implement other actions as needed\r\n                    }\r\n                  }}>{action}</button>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}