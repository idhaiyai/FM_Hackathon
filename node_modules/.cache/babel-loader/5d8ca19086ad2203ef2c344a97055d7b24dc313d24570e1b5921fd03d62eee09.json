{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\scb-bank-policy\\\\src\\\\components\\\\RoleTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { sortData } from '../utils/sort'; // Import your sorting function\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleTable = () => {\n  _s();\n  const initialRoles = [{\n    name: 'Admin',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'User',\n    description: 'Limited access to resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Creator',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Approver',\n    description: 'Limited access to resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }, {\n    name: 'Creator and Approver',\n    description: 'Full access to all resources',\n    createdBy: 'System',\n    actions: ['Edit', 'Delete']\n  }\n  // Add more roles as needed\n  ];\n  const [roles, setRoles] = useState(initialRoles);\n  const [sortedRoles, setSortedRoles] = useState([]);\n  const [sortBy, setSortBy] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [editIndex, setEditIndex] = useState(-1); // State to track which role is being edited\n\n  // Function to handle sorting\n  const handleSort = field => {\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortBy(field);\n    setSortDirection(direction);\n    setSortedRoles(sortData(roles, field, direction));\n  };\n\n  // Function to delete a role\n  const handleDelete = index => {\n    // Create a new array of roles excluding the role at the specified index\n    const updatedRoles = [...roles];\n    updatedRoles.splice(index, 1); // Remove the role at index\n    setRoles(updatedRoles); // Update the roles state\n    setSortedRoles(sortData(updatedRoles, sortBy, sortDirection)); // Update sorted roles if necessary\n  };\n\n  // Function to handle edit mode toggle\n  const toggleEdit = index => {\n    setEditIndex(index === editIndex ? -1 : index); // Toggle edit mode\n  };\n\n  // Function to handle changes in role data during editing\n  const handleInputChange = (event, index, field) => {\n    const updatedRoles = [...roles];\n    updatedRoles[index][field] = event.target.value;\n    setRoles(updatedRoles);\n  };\n\n  // Save changes during editing\n  const saveChanges = index => {\n    setEditIndex(-1); // Exit edit mode\n    // Perform any additional logic here (e.g., API calls for persistence)\n  };\n\n  // Determine which array to display (sorted or original)\n  const rolesToDisplay = sortedRoles.length > 0 ? sortedRoles : roles;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Role Management Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            children: \"Role Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('description'),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('createdBy'),\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rolesToDisplay.map((role, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: role.name,\n              onChange: e => handleInputChange(e, index, 'name')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 42\n            }, this) : role.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: role.description,\n              onChange: e => handleInputChange(e, index, 'description')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 42\n            }, this) : role.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: role.createdBy,\n              onChange: e => handleInputChange(e, index, 'createdBy')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 42\n            }, this) : role.createdBy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => saveChanges(index),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleEdit(index),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(index),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleTable, \"OAt8EHlWJGNUM5y3IxpEzLpcF9Y=\");\n_c = RoleTable;\nexport default RoleTable;\nvar _c;\n$RefreshReg$(_c, \"RoleTable\");","map":{"version":3,"names":["React","useState","sortData","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleTable","_s","initialRoles","name","description","createdBy","actions","roles","setRoles","sortedRoles","setSortedRoles","sortBy","setSortBy","sortDirection","setSortDirection","editIndex","setEditIndex","handleSort","field","direction","handleDelete","index","updatedRoles","splice","toggleEdit","handleInputChange","event","target","value","saveChanges","rolesToDisplay","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","role","type","onChange","e","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/scb-bank-policy/src/components/RoleTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sortData } from '../utils/sort'; // Import your sorting function\r\n\r\nconst RoleTable = () => {\r\n  const initialRoles = [\r\n    { name: 'Admin', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'User', description: 'Limited access to resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Creator', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Approver', description: 'Limited access to resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    { name: 'Creator and Approver', description: 'Full access to all resources', createdBy: 'System', actions: ['Edit', 'Delete'] },\r\n    // Add more roles as needed\r\n  ];\r\n\r\n  const [roles, setRoles] = useState(initialRoles);\r\n  const [sortedRoles, setSortedRoles] = useState([]);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n  const [editIndex, setEditIndex] = useState(-1); // State to track which role is being edited\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (field) => {\r\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(field);\r\n    setSortDirection(direction);\r\n    setSortedRoles(sortData(roles, field, direction));\r\n  };\r\n\r\n  // Function to delete a role\r\n  const handleDelete = (index) => {\r\n    // Create a new array of roles excluding the role at the specified index\r\n    const updatedRoles = [...roles];\r\n    updatedRoles.splice(index, 1); // Remove the role at index\r\n    setRoles(updatedRoles); // Update the roles state\r\n    setSortedRoles(sortData(updatedRoles, sortBy, sortDirection)); // Update sorted roles if necessary\r\n  };\r\n\r\n  // Function to handle edit mode toggle\r\n  const toggleEdit = (index) => {\r\n    setEditIndex(index === editIndex ? -1 : index); // Toggle edit mode\r\n  };\r\n\r\n  // Function to handle changes in role data during editing\r\n  const handleInputChange = (event, index, field) => {\r\n    const updatedRoles = [...roles];\r\n    updatedRoles[index][field] = event.target.value;\r\n    setRoles(updatedRoles);\r\n  };\r\n\r\n  // Save changes during editing\r\n  const saveChanges = (index) => {\r\n    setEditIndex(-1); // Exit edit mode\r\n    // Perform any additional logic here (e.g., API calls for persistence)\r\n  };\r\n\r\n  // Determine which array to display (sorted or original)\r\n  const rolesToDisplay = sortedRoles.length > 0 ? sortedRoles : roles;\r\n\r\n  return (\r\n    <div className=\"policy-table\">\r\n      <h2>Role Management Overview</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('name')}>Role Name</th>\r\n            <th onClick={() => handleSort('description')}>Description</th>\r\n            <th onClick={() => handleSort('createdBy')}>Created By</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rolesToDisplay.map((role, index) => (\r\n            <tr key={index}>\r\n              <td>{editIndex === index ? <input type=\"text\" value={role.name} onChange={(e) => handleInputChange(e, index, 'name')} /> : role.name}</td>\r\n              <td>{editIndex === index ? <input type=\"text\" value={role.description} onChange={(e) => handleInputChange(e, index, 'description')} /> : role.description}</td>\r\n              <td>{editIndex === index ? <input type=\"text\" value={role.createdBy} onChange={(e) => handleInputChange(e, index, 'createdBy')} /> : role.createdBy}</td>\r\n              <td>\r\n                {editIndex === index ? (\r\n                  <button onClick={() => saveChanges(index)}>Save</button>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => toggleEdit(index)}>Edit</button>\r\n                    <button onClick={() => handleDelete(index)}>Delete</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}