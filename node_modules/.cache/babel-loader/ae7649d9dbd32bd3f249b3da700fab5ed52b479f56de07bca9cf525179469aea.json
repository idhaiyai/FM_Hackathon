{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\scb-bank-policy\\\\src\\\\components\\\\PolicyTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { sortData } from '../utils/sort'; // Import your sorting function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PolicyTable = ({\n  searchQuery\n}) => {\n  _s();\n  const [policies, setPolicies] = useState([{\n    name: 'Access Control',\n    description: 'Control user access',\n    createdBy: 'Mansi',\n    lastUpdated: '2022-10-01',\n    actions: ['View']\n  }, {\n    name: 'Data Encryption',\n    description: 'Encrypt sensitive data',\n    createdBy: 'Saurabh',\n    lastUpdated: '2022-09-28',\n    actions: ['View']\n  }\n  // Add more policies as needed\n  ]);\n  const [sortedPolicies, setSortedPolicies] = useState([]);\n  const [sortBy, setSortBy] = useState('name');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  // Function to handle sorting\n  const handleSort = field => {\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortBy(field);\n    setSortDirection(direction);\n    setSortedPolicies(sortData(policies, field, direction));\n  };\n\n  // Filter policies based on search query\n  const filteredPolicies = policies.filter(policy => policy.name.toLowerCase().includes((searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.toLowerCase()) || '') || policy.description.toLowerCase().includes((searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.toLowerCase()) || '') || policy.createdBy.toLowerCase().includes((searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery.toLowerCase()) || ''));\n\n  // Determine which array to display (sorted, filtered, or original)\n  const policiesToDisplay = sortedPolicies.length > 0 ? sortedPolicies : searchQuery ? filteredPolicies : policies;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Policy Management Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-policies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter-date\",\n          children: \"Filter by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"filter-date\",\n          name: \"filter-date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"View Rejected Policies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            children: \"Policy Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('description'),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('createdBy'),\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('lastUpdated'),\n            children: \"Last Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: policiesToDisplay.map((policy, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.createdBy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.lastUpdated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.actions.map((action, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n              children: action\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PolicyTable, \"sOV7MDUl35NF6B70J0D9t4NF+8g=\");\n_c = PolicyTable;\nexport default PolicyTable;\nvar _c;\n$RefreshReg$(_c, \"PolicyTable\");","map":{"version":3,"names":["React","useState","sortData","jsxDEV","_jsxDEV","PolicyTable","searchQuery","_s","policies","setPolicies","name","description","createdBy","lastUpdated","actions","sortedPolicies","setSortedPolicies","sortBy","setSortBy","sortDirection","setSortDirection","handleSort","field","direction","filteredPolicies","filter","policy","toLowerCase","includes","policiesToDisplay","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","onClick","map","index","action","idx","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/scb-bank-policy/src/components/PolicyTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { sortData } from '../utils/sort'; // Import your sorting function\r\n\r\nconst PolicyTable = ({ searchQuery }) => {\r\n  const [policies, setPolicies] = useState([\r\n    { name: 'Access Control', description: 'Control user access', createdBy: 'Mansi', lastUpdated: '2022-10-01', actions: ['View'] },\r\n    { name: 'Data Encryption', description: 'Encrypt sensitive data', createdBy: 'Saurabh', lastUpdated: '2022-09-28', actions: ['View'] },\r\n    // Add more policies as needed\r\n  ]);\r\n  const [sortedPolicies, setSortedPolicies] = useState([]);\r\n  const [sortBy, setSortBy] = useState('name');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Function to handle sorting\r\n  const handleSort = (field) => {\r\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(field);\r\n    setSortDirection(direction);\r\n    setSortedPolicies(sortData(policies, field, direction));\r\n  };\r\n\r\n  // Filter policies based on search query\r\n  const filteredPolicies = policies.filter(policy =>\r\n    policy.name.toLowerCase().includes(searchQuery?.toLowerCase() || '') ||\r\n    policy.description.toLowerCase().includes(searchQuery?.toLowerCase() || '') ||\r\n    policy.createdBy.toLowerCase().includes(searchQuery?.toLowerCase() || '')\r\n  );\r\n\r\n  // Determine which array to display (sorted, filtered, or original)\r\n  const policiesToDisplay = sortedPolicies.length > 0 ? sortedPolicies : (searchQuery ? filteredPolicies : policies);\r\n\r\n  return (\r\n    <div className=\"policy-table\">\r\n      <h2>Policy Management Overview</h2>\r\n\r\n      <div className=\"archive-policies\">\r\n        <div className=\"filter-options\">\r\n          <label htmlFor=\"filter-date\">Filter by Date</label>\r\n          <input type=\"date\" id=\"filter-date\" name=\"filter-date\" />\r\n          <button>View</button>\r\n          <button>View Rejected Policies</button>\r\n        </div>\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('name')}>Policy Name</th>\r\n            <th onClick={() => handleSort('description')}>Description</th>\r\n            <th onClick={() => handleSort('createdBy')}>Created By</th>\r\n            <th onClick={() => handleSort('lastUpdated')}>Last Updated</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {policiesToDisplay.map((policy, index) => (\r\n            <tr key={index}>\r\n              <td>{policy.name}</td>\r\n              <td>{policy.description}</td>\r\n              <td>{policy.createdBy}</td>\r\n              <td>{policy.lastUpdated}</td>\r\n              <td>\r\n                {policy.actions.map((action, idx) => (\r\n                  <button key={idx}>{action}</button>\r\n                ))}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PolicyTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}