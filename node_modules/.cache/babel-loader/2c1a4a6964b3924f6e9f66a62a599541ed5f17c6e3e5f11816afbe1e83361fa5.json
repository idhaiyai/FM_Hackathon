{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\FRONTEND\\\\scb-bank-policy\\\\src\\\\components\\\\PolicyTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { sortData } from '../Util/sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PolicyTable = () => {\n  _s();\n  const [policies, setPolicies] = useState([]);\n  const [sortBy, setSortBy] = useState('dataPolicyName');\n  const [sortDirection, setSortDirection] = useState('asc');\n  useEffect(() => {\n    // Fetch data from the API\n    axios.get('http://localhost:8080/policies/all').then(response => {\n      console.log('Fetched policies data:', response.data);\n      setPolicies(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the data!', error);\n    });\n  }, []);\n  const handleSort = field => {\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortBy(field);\n    setSortDirection(direction);\n    setPolicies(sortData(policies, field, direction)); // Assume sortData is defined elsewhere\n  };\n  const handleViewClick = id => {\n    if (id) {\n      // Fetch the policy data using the id and open in a new tab\n      axios.get(`http://localhost:8080/policies/unique/${id}`).then(response => {\n        const policyData = response.data;\n        // Open a new window with the policy data\n        const newWindow = window.open('', '_blank');\n        if (newWindow) {\n          newWindow.document.write(`\n              <html>\n                <head><title>Policy Detail</title></head>\n                <body>\n                  <h2>Policy Detail</h2>\n                  <p><strong>Policy ID:</strong> ${policyData.dataPolicyId}</p>\n                  <p><strong>Policy Name:</strong> ${policyData.dataPolicyName}</p>\n                  <p><strong>Version:</strong> ${policyData.dataPolicyVersion}</p>\n                  <p><strong>Last Modified:</strong> ${policyData.dataPolicyLastModified}</p>\n                  <p><strong>Status:</strong> ${policyData.dataPolicyStatus}</p>\n                  <p><strong>Creator:</strong> ${policyData.dataPolicyCreator}</p>\n                  <p><strong>Examiner:</strong> ${policyData.dataPolicyExaminer}</p>\n                  <div>\n                    <strong>Data Policy:</strong>\n                    ${policyData.dataPolicy.map((policyItem, index) => `\n                      <div key=${index}>\n                        <p>Operator: ${policyItem.operator}</p>\n                        ${policyItem.rules.map((rule, ruleIndex) => `\n                          <div key=${ruleIndex}>\n                            <p>Key: ${rule.key}</p>\n                            <p>Operator: ${rule.operator}</p>\n                            <p>Values: ${rule.values.join(', ')}</p>\n                          </div>\n                        `).join('')}\n                      </div>\n                    `).join('')}\n                  </div>\n                </body>\n              </html>\n            `);\n          newWindow.document.close();\n        } else {\n          console.error('Failed to open new window');\n        }\n      }).catch(error => {\n        console.error('There was an error fetching the policy details!', error);\n      });\n    } else {\n      console.error('Invalid id:', id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Policy Management Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyId'),\n            children: \"Policy ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyName'),\n            children: \"Policy Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyVersion'),\n            children: \"Version\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyLastModified'),\n            children: \"Last Modified\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyStatus'),\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: policies.map((policy, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyVersion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyLastModified\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewClick(policy.id),\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(PolicyTable, \"XW9KCRHY/hiIrgje5wjlmwWWk38=\");\n_c = PolicyTable;\nexport default PolicyTable;\nvar _c;\n$RefreshReg$(_c, \"PolicyTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","sortData","jsxDEV","_jsxDEV","PolicyTable","_s","policies","setPolicies","sortBy","setSortBy","sortDirection","setSortDirection","get","then","response","console","log","data","catch","error","handleSort","field","direction","handleViewClick","id","policyData","newWindow","window","open","document","write","dataPolicyId","dataPolicyName","dataPolicyVersion","dataPolicyLastModified","dataPolicyStatus","dataPolicyCreator","dataPolicyExaminer","dataPolicy","map","policyItem","index","operator","rules","rule","ruleIndex","key","values","join","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","policy","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/FRONTEND/scb-bank-policy/src/components/PolicyTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { sortData } from '../Util/sort';\r\n\r\nconst PolicyTable = () => {\r\n  const [policies, setPolicies] = useState([]);\r\n  const [sortBy, setSortBy] = useState('dataPolicyName');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    axios.get('http://localhost:8080/policies/all')\r\n      .then(response => {\r\n        console.log('Fetched policies data:', response.data);\r\n        setPolicies(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the data!', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSort = (field) => {\r\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(field);\r\n    setSortDirection(direction);\r\n    setPolicies(sortData(policies, field, direction)); // Assume sortData is defined elsewhere\r\n  };\r\n\r\n  const handleViewClick = (id) => {\r\n    if (id) {\r\n      // Fetch the policy data using the id and open in a new tab\r\n      axios.get(`http://localhost:8080/policies/unique/${id}`)\r\n        .then(response => {\r\n          const policyData = response.data;\r\n          // Open a new window with the policy data\r\n          const newWindow = window.open('', '_blank');\r\n          if (newWindow) {\r\n            newWindow.document.write(`\r\n              <html>\r\n                <head><title>Policy Detail</title></head>\r\n                <body>\r\n                  <h2>Policy Detail</h2>\r\n                  <p><strong>Policy ID:</strong> ${policyData.dataPolicyId}</p>\r\n                  <p><strong>Policy Name:</strong> ${policyData.dataPolicyName}</p>\r\n                  <p><strong>Version:</strong> ${policyData.dataPolicyVersion}</p>\r\n                  <p><strong>Last Modified:</strong> ${policyData.dataPolicyLastModified}</p>\r\n                  <p><strong>Status:</strong> ${policyData.dataPolicyStatus}</p>\r\n                  <p><strong>Creator:</strong> ${policyData.dataPolicyCreator}</p>\r\n                  <p><strong>Examiner:</strong> ${policyData.dataPolicyExaminer}</p>\r\n                  <div>\r\n                    <strong>Data Policy:</strong>\r\n                    ${policyData.dataPolicy.map((policyItem, index) => `\r\n                      <div key=${index}>\r\n                        <p>Operator: ${policyItem.operator}</p>\r\n                        ${policyItem.rules.map((rule, ruleIndex) => `\r\n                          <div key=${ruleIndex}>\r\n                            <p>Key: ${rule.key}</p>\r\n                            <p>Operator: ${rule.operator}</p>\r\n                            <p>Values: ${rule.values.join(', ')}</p>\r\n                          </div>\r\n                        `).join('')}\r\n                      </div>\r\n                    `).join('')}\r\n                  </div>\r\n                </body>\r\n              </html>\r\n            `);\r\n            newWindow.document.close();\r\n          } else {\r\n            console.error('Failed to open new window');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('There was an error fetching the policy details!', error);\r\n        });\r\n    } else {\r\n      console.error('Invalid id:', id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"policy-table\">\r\n      <h2>Policy Management Overview</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('dataPolicyId')}>Policy ID</th>\r\n            <th onClick={() => handleSort('dataPolicyName')}>Policy Name</th>\r\n            <th onClick={() => handleSort('dataPolicyVersion')}>Version</th>\r\n            <th onClick={() => handleSort('dataPolicyLastModified')}>Last Modified</th>\r\n            <th onClick={() => handleSort('dataPolicyStatus')}>Status</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {policies.map((policy, index) => (\r\n            <tr key={index}>\r\n              <td>{policy.dataPolicyId}</td>\r\n              <td>{policy.dataPolicyName}</td>\r\n              <td>{policy.dataPolicyVersion}</td>\r\n              <td>{policy.dataPolicyLastModified}</td>\r\n              <td>{policy.dataPolicyStatus}</td>\r\n              <td>\r\n                <button onClick={() => handleViewClick(policy.id)}>View</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PolicyTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}