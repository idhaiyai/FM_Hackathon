{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\scb-bank-policy\\\\src\\\\components\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from 'react';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\nimport PolicyTable from './PolicyTable';\nimport ArchiveTable from './ArchiveTable';\nimport UserTable from './UserTable';\nimport RoleTable from './RoleTable';\nimport RejectedPoliciesTable from './RejectedPoliciesTable';\nimport Login from './Login'; // Import the Login component\nimport '../Style/App.css'; // Adjust the path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\n  const [activeTable, setActiveTable] = useState('PolicyTable'); // State to toggle between tables\n\n  // Function to handle login\n  const handleLogin = status => {\n    setIsLoggedIn(status);\n  };\n\n  // Function to render content based on login status\n  const renderContent = () => {\n    if (isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          activeTable: activeTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), renderTable()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        handleLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // Function to render different tables based on activeTable state\n  const renderTable = () => {\n    switch (activeTable) {\n      case 'PolicyTable':\n        return /*#__PURE__*/_jsxDEV(PolicyTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this);\n      case 'ArchiveTable':\n        return /*#__PURE__*/_jsxDEV(ArchiveTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this);\n      case 'UserTable':\n        return /*#__PURE__*/_jsxDEV(UserTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      case 'RoleTable':\n        return /*#__PURE__*/_jsxDEV(RoleTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      case 'RejectedPoliciesTable':\n        return /*#__PURE__*/_jsxDEV(RejectedPoliciesTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(PolicyTable, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      setActiveTable: setActiveTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"720gNADT0gTbDGXIsKFyaqk2MTc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Sidebar","Header","PolicyTable","ArchiveTable","UserTable","RoleTable","RejectedPoliciesTable","Login","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","activeTable","setActiveTable","handleLogin","status","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTable","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/scb-bank-policy/src/components/App.js"],"sourcesContent":["// App.js\r\n\r\nimport React, { useState } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport Header from './Header';\r\nimport PolicyTable from './PolicyTable';\r\nimport ArchiveTable from './ArchiveTable';\r\nimport UserTable from './UserTable';\r\nimport RoleTable from './RoleTable';\r\nimport RejectedPoliciesTable from './RejectedPoliciesTable';\r\nimport Login from './Login'; // Import the Login component\r\nimport '../Style/App.css'; // Adjust the path as per your project structure\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // State to track login status\r\n  const [activeTable, setActiveTable] = useState('PolicyTable'); // State to toggle between tables\r\n\r\n  // Function to handle login\r\n  const handleLogin = (status) => {\r\n    setIsLoggedIn(status);\r\n  };\r\n\r\n  // Function to render content based on login status\r\n  const renderContent = () => {\r\n    if (isLoggedIn) {\r\n      return (\r\n        <div className=\"main-content\">\r\n          <Header activeTable={activeTable} />\r\n          {renderTable()}\r\n        </div>\r\n      );\r\n    } else {\r\n      return <Login handleLogin={handleLogin} />;\r\n    }\r\n  };\r\n\r\n  // Function to render different tables based on activeTable state\r\n  const renderTable = () => {\r\n    switch (activeTable) {\r\n      case 'PolicyTable':\r\n        return <PolicyTable />;\r\n      case 'ArchiveTable':\r\n        return <ArchiveTable />;\r\n      case 'UserTable':\r\n        return <UserTable />;\r\n      case 'RoleTable':\r\n        return <RoleTable />;\r\n      case 'RejectedPoliciesTable':\r\n        return <RejectedPoliciesTable />;\r\n      default:\r\n        return <PolicyTable />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Sidebar setActiveTable={setActiveTable} />\r\n      {renderContent()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}