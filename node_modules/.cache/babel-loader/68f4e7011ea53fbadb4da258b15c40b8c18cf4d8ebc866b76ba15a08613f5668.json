{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shash\\\\Desktop\\\\Hackathon\\\\FRONTEND\\\\scb-bank-policy\\\\src\\\\components\\\\ArchiveTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { sortData } from '../Util/sort'; // Ensure sortData function handles sorting correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchiveTable = () => {\n  _s();\n  const [archivedPolicies, setArchivedPolicies] = useState([]);\n  const [filteredPolicies, setFilteredPolicies] = useState([]);\n  const [sortBy, setSortBy] = useState('dataPolicyName');\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [selectedDate, setSelectedDate] = useState('');\n  useEffect(() => {\n    // Fetch archived policies from backend\n    axios.get('http://localhost:8080/policies/archive').then(response => {\n      console.log('Fetched archived policies data:', response.data);\n      setArchivedPolicies(response.data);\n      setFilteredPolicies(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the archived policies data!', error);\n    });\n  }, []);\n  const handleSort = field => {\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\n    setSortBy(field);\n    setSortDirection(direction);\n    setFilteredPolicies(sortData(archivedPolicies, field, direction));\n  };\n  const handleFilterByDate = () => {\n    const filtered = archivedPolicies.filter(policy => policy.dataPolicyLastModified.startsWith(selectedDate));\n    setFilteredPolicies(filtered);\n  };\n  const handleResetFilter = () => {\n    setFilteredPolicies(archivedPolicies);\n    setSelectedDate('');\n  };\n  const formatDate = dateObj => {\n    if (dateObj && dateObj.date) {\n      return new Date(dateObj.date).toLocaleDateString(); // Adjust format as needed\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"policy-table\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Archived Policies Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"archive-policies\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"filter-date-archive\",\n          children: \"Filter by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"filter-date-archive\",\n          name: \"filter-date-archive\",\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFilterByDate,\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleResetFilter,\n          children: \"Reset Filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyName'),\n            children: \"Policy Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyDescription'),\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyCreator'),\n            children: \"Created By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('dataPolicyLastModified'),\n            children: \"Last Updated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredPolicies.map((policy, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: policy.dataPolicyCreator\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: formatDate(policy.dataPolicyLastModified)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchiveTable, \"Ur1PY386YmxnqPYRbvHn8K5Hyfw=\");\n_c = ArchiveTable;\nexport default ArchiveTable;\nvar _c;\n$RefreshReg$(_c, \"ArchiveTable\");","map":{"version":3,"names":["React","useState","useEffect","axios","sortData","jsxDEV","_jsxDEV","ArchiveTable","_s","archivedPolicies","setArchivedPolicies","filteredPolicies","setFilteredPolicies","sortBy","setSortBy","sortDirection","setSortDirection","selectedDate","setSelectedDate","get","then","response","console","log","data","catch","error","handleSort","field","direction","handleFilterByDate","filtered","filter","policy","dataPolicyLastModified","startsWith","handleResetFilter","formatDate","dateObj","date","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","value","onChange","e","target","onClick","map","index","dataPolicyName","dataPolicyDescription","dataPolicyCreator","_c","$RefreshReg$"],"sources":["C:/Users/shash/Desktop/Hackathon/FRONTEND/scb-bank-policy/src/components/ArchiveTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { sortData } from '../Util/sort'; // Ensure sortData function handles sorting correctly\r\n\r\nconst ArchiveTable = () => {\r\n  const [archivedPolicies, setArchivedPolicies] = useState([]);\r\n  const [filteredPolicies, setFilteredPolicies] = useState([]);\r\n  const [sortBy, setSortBy] = useState('dataPolicyName');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch archived policies from backend\r\n    axios.get('http://localhost:8080/policies/archive')\r\n      .then(response => {\r\n        console.log('Fetched archived policies data:', response.data);\r\n        setArchivedPolicies(response.data);\r\n        setFilteredPolicies(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('There was an error fetching the archived policies data!', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleSort = (field) => {\r\n    const direction = sortBy === field && sortDirection === 'asc' ? 'desc' : 'asc';\r\n    setSortBy(field);\r\n    setSortDirection(direction);\r\n    setFilteredPolicies(sortData(archivedPolicies, field, direction));\r\n  };\r\n\r\n  const handleFilterByDate = () => {\r\n    const filtered = archivedPolicies.filter(policy => policy.dataPolicyLastModified.startsWith(selectedDate));\r\n    setFilteredPolicies(filtered);\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilteredPolicies(archivedPolicies);\r\n    setSelectedDate('');\r\n  };\r\n\r\n  const formatDate = (dateObj) => {\r\n    if (dateObj && dateObj.date) {\r\n      return new Date(dateObj.date).toLocaleDateString(); // Adjust format as needed\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"policy-table\"> {/* Use the same class as PolicyTable */}\r\n      <h2>Archived Policies Overview</h2>\r\n      <div className=\"archive-policies\">\r\n        <div className=\"filter-options\">\r\n          <label htmlFor=\"filter-date-archive\">Filter by Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"filter-date-archive\"\r\n            name=\"filter-date-archive\"\r\n            value={selectedDate}\r\n            onChange={(e) => setSelectedDate(e.target.value)}\r\n          />\r\n          <button onClick={handleFilterByDate}>View</button>\r\n          <button onClick={handleResetFilter}>Reset Filter</button>\r\n        </div>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th onClick={() => handleSort('dataPolicyName')}>Policy Name</th>\r\n            <th onClick={() => handleSort('dataPolicyDescription')}>Description</th>\r\n            <th onClick={() => handleSort('dataPolicyCreator')}>Created By</th>\r\n            <th onClick={() => handleSort('dataPolicyLastModified')}>Last Updated</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredPolicies.map((policy, index) => (\r\n            <tr key={index}>\r\n              <td>{policy.dataPolicyName}</td>\r\n              <td>{policy.dataPolicyDescription}</td>\r\n              <td>{policy.dataPolicyCreator}</td>\r\n              <td>{formatDate(policy.dataPolicyLastModified)}</td>\r\n              <td>\r\n                <button>View</button>\r\n                {/* Add more action buttons as needed */}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchiveTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}